package com.nianticproject.ingress.common.scanner;

import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.Texture.TextureWrap;
import com.badlogic.gdx.graphics.VertexAttribute;
import com.badlogic.gdx.graphics.glutils.ShaderProgram;
import com.badlogic.gdx.graphics.glutils.ShaderProgram.Uniform;
import com.google.a.c.eq;
import com.nianticproject.ingress.common.b.c;
import com.nianticproject.ingress.common.j.a;
import com.nianticproject.ingress.common.scanner.visuals.ab;
import com.nianticproject.ingress.common.scanner.visuals.b.g;
import com.nianticproject.ingress.common.scanner.visuals.b.l;
import com.nianticproject.ingress.common.scanner.visuals.b.z;
import com.nianticproject.ingress.common.ui.widget.ScrollLabel;
import com.nianticproject.ingress.common.w.ac;
import com.nianticproject.ingress.common.w.ad;
import com.nianticproject.ingress.common.x.i;
import java.util.ArrayList;

public final class ag
{
  public static Texture A;
  public static com.nianticproject.ingress.common.j.ai B;
  public static com.nianticproject.ingress.common.j.ai C;
  public static com.nianticproject.ingress.common.j.ai D;
  public static com.nianticproject.ingress.common.j.ai E;
  public static com.nianticproject.ingress.common.j.ai F;
  public static Texture G;
  public static com.nianticproject.ingress.common.j.ai H;
  public static com.nianticproject.ingress.common.j.ai I;
  public static com.nianticproject.ingress.common.j.ai J;
  public static Texture K;
  public static com.nianticproject.ingress.common.j.ai L;
  public static com.nianticproject.ingress.common.j.ai M;
  public static Texture N;
  public static ShaderProgram O;
  public static com.nianticproject.ingress.common.j.ai P;
  public static com.nianticproject.ingress.common.j.ai Q;
  public static com.nianticproject.ingress.common.j.ai R;
  public static com.nianticproject.ingress.common.j.ai S;
  public static com.nianticproject.ingress.common.j.ai T;
  public static com.nianticproject.ingress.common.j.ai U;
  public static com.nianticproject.ingress.common.j.ai V;
  public static com.nianticproject.ingress.common.j.ai W;
  public static com.nianticproject.ingress.common.j.ai X;
  public static com.nianticproject.ingress.common.j.ai Y;
  public static com.nianticproject.ingress.common.j.ai Z;
  public static com.nianticproject.ingress.common.j.ai a;
  public static ShaderProgram aA;
  public static ShaderProgram aB;
  public static ShaderProgram aC;
  public static ShaderProgram aD;
  public static ShaderProgram aE;
  public static ShaderProgram aF;
  public static ShaderProgram aG;
  public static ShaderProgram aH;
  public static ShaderProgram aI;
  public static ShaderProgram aJ;
  public static ShaderProgram aK;
  public static Texture aL;
  public static Texture aM;
  public static ShaderProgram aN;
  public static ShaderProgram aO;
  public static ShaderProgram aP;
  public static ShaderProgram aQ;
  public static ShaderProgram aR;
  public static ShaderProgram aS;
  public static ShaderProgram aT;
  public static ShaderProgram aU;
  public static Texture aV;
  public static ShaderProgram aW;
  public static Texture aX;
  public static ShaderProgram aY;
  public static com.nianticproject.ingress.common.j.an aZ;
  public static com.nianticproject.ingress.common.j.ai aa;
  public static com.nianticproject.ingress.common.j.ai ab;
  public static com.nianticproject.ingress.common.j.ai ac;
  public static com.nianticproject.ingress.common.j.ai ad;
  public static com.nianticproject.ingress.common.j.ai ae;
  public static Texture af;
  public static Texture ag;
  public static com.nianticproject.ingress.common.j.ai ah;
  public static com.nianticproject.ingress.common.j.ai ai;
  public static Texture aj;
  public static com.nianticproject.ingress.common.j.ai ak;
  public static com.nianticproject.ingress.common.j.ai al;
  public static Texture am;
  public static Texture an;
  public static Texture ao;
  public static Texture ap;
  public static int aq = 3;
  public static int ar = 2;
  public static int as = 3;
  public static int at = 3;
  public static final ArrayList<com.nianticproject.ingress.common.j.ai> au = eq.a(1);
  public static Texture av;
  public static ShaderProgram aw;
  public static ShaderProgram.Uniform ax;
  public static ShaderProgram.Uniform ay;
  public static ShaderProgram az;
  public static com.nianticproject.ingress.common.j.ai b;
  private static final com.nianticproject.ingress.common.w.w ba = new com.nianticproject.ingress.common.w.w();
  private static final float[] bb = { -0.5F, -0.5F, 0.5F, -0.5F, 0.5F, 0.5F, -0.5F, 0.5F, -0.5F, -0.5F, -0.5F, -0.5F, 0.5F, -0.5F, -0.5F, 0.5F, -0.5F, 0.5F, 0.5F, 0.5F, -0.5F, 0.5F, 0.5F, 0.5F };
  private static final short[] bc = { 0, 1, 0, 3, 0, 5, 1, 2, 1, 7, 2, 3, 2, 6, 3, 4, 4, 5, 4, 6, 5, 7, 6, 7 };
  private static final float[] bd = { 0.5F, 0.0F, 0.0F, 0.489F, 0.0F, 0.1F, 0.457F, 0.0F, 0.2F, 0.405F, 0.0F, 0.29F, 0.335F, 0.0F, 0.37F, 0.25F, 0.0F, 0.43F, 0.155F, 0.0F, 0.48F, 0.052F, 0.0F, 0.5F, -0.052F, 0.0F, 0.5F, -0.155F, 0.0F, 0.48F, -0.25F, 0.0F, 0.43F, -0.335F, 0.0F, 0.37F, -0.405F, 0.0F, 0.29F, -0.457F, 0.0F, 0.2F, -0.489F, 0.0F, 0.1F, -0.5F, 0.0F, 0.0F, -0.489F, 0.0F, -0.1F, -0.457F, 0.0F, -0.2F, -0.405F, 0.0F, -0.29F, -0.335F, 0.0F, -0.37F, -0.25F, 0.0F, -0.43F, -0.155F, 0.0F, -0.48F, -0.052F, 0.0F, -0.5F, 0.052F, 0.0F, -0.5F, 0.155F, 0.0F, -0.48F, 0.25F, 0.0F, -0.43F, 0.335F, 0.0F, -0.37F, 0.405F, 0.0F, -0.29F, 0.457F, 0.0F, -0.2F, 0.489F, 0.0F, -0.1F };
  private static final short[] be = { 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 0, 29 };
  public static com.nianticproject.ingress.common.j.ai c;
  public static com.nianticproject.ingress.common.j.ai d;
  public static com.nianticproject.ingress.common.j.ai e;
  public static Texture f;
  public static Texture g;
  public static Texture h;
  public static com.nianticproject.ingress.common.j.ai i;
  public static Texture j;
  public static com.nianticproject.ingress.common.j.ai k;
  public static com.nianticproject.ingress.common.j.ai l;
  public static com.nianticproject.ingress.common.j.ai m;
  public static Texture n;
  public static com.nianticproject.ingress.common.j.ai o;
  public static com.nianticproject.ingress.common.j.ai p;
  public static com.nianticproject.ingress.common.j.ai q;
  public static Texture r;
  public static com.nianticproject.ingress.common.j.ai s;
  public static com.nianticproject.ingress.common.j.ai t;
  public static com.nianticproject.ingress.common.j.ai u;
  public static com.nianticproject.ingress.common.j.ai v;
  public static com.nianticproject.ingress.common.j.ai w;
  public static com.nianticproject.ingress.common.j.ai x;
  public static com.nianticproject.ingress.common.j.ai y;
  public static com.nianticproject.ingress.common.j.ai z;

  static
  {
    for (int i1 = 0; i1 <= 0; i1++)
      au.add(null);
  }

  public static void a()
  {
    if (!ba.d())
      return;
    ac.a(L);
    L = null;
    ac.a(M);
    M = null;
    ac.a(N);
    N = null;
    ac.a(a);
    a = null;
    ac.a(b);
    b = null;
    ac.a(c);
    c = null;
    ac.a(d);
    d = null;
    ac.a(e);
    e = null;
    ac.a(f);
    f = null;
    ac.a(h);
    h = null;
    ac.a(g);
    g = null;
    ac.a(i);
    i = null;
    ac.a(j);
    j = null;
    ac.a(m);
    m = null;
    ac.a(k);
    k = null;
    ac.a(l);
    l = null;
    ac.a(n);
    n = null;
    ac.a(aL);
    aL = null;
    ac.a(r);
    r = null;
    ac.a(o);
    o = null;
    ac.a(p);
    p = null;
    ac.a(q);
    q = null;
    ac.a(s);
    s = null;
    ac.a(t);
    t = null;
    ac.a(u);
    u = null;
    ac.a(v);
    v = null;
    ac.a(w);
    w = null;
    ac.a(x);
    x = null;
    ac.a(y);
    y = null;
    ac.a(z);
    z = null;
    ac.a(A);
    A = null;
    ac.a(G);
    G = null;
    ac.a(B);
    B = null;
    ac.a(K);
    K = null;
    ac.a(C);
    C = null;
    ac.a(D);
    D = null;
    ac.a(E);
    E = null;
    ac.a(F);
    F = null;
    ac.a(H);
    H = null;
    ac.a(I);
    I = null;
    ac.a(J);
    J = null;
    ac.a(O);
    O = null;
    ac.a(P);
    P = null;
    ac.a(Q);
    Q = null;
    ac.a(R);
    R = null;
    ac.a(S);
    S = null;
    ac.a(T);
    T = null;
    ac.a(U);
    U = null;
    ac.a(V);
    V = null;
    ac.a(W);
    W = null;
    ac.a(X);
    X = null;
    ac.a(Y);
    Y = null;
    ac.a(Z);
    Z = null;
    ac.a(aa);
    aa = null;
    ac.a(ab);
    ab = null;
    ac.a(ac);
    ac = null;
    ac.a(ad);
    ad = null;
    ac.a(ae);
    ae = null;
    ac.a(af);
    af = null;
    ac.a(ag);
    ag = null;
    ac.a(ah);
    ah = null;
    for (int i1 = 0; i1 < au.size(); i1++)
    {
      com.nianticproject.ingress.common.j.ai localai = (com.nianticproject.ingress.common.j.ai)au.get(i1);
      au.set(i1, ac.a(localai));
    }
    ac.a(av);
    av = null;
    ac.a(az);
    az = null;
    ac.a(aA);
    aA = null;
    ac.a(aB);
    aB = null;
    ac.a(aD);
    aD = null;
    ac.a(aY);
    aY = null;
    ac.a(aG);
    aG = null;
    ac.a(aH);
    aH = null;
    ac.a(aE);
    aE = null;
    ac.a(aZ);
    aZ = null;
    ac.a(aN);
    aN = null;
    ac.a(aP);
    aP = null;
    ac.a(aR);
    aR = null;
    ac.a(aO);
    aO = null;
    ac.a(aS);
    aS = null;
    ac.a(aU);
    aU = null;
    ac.a(aT);
    aT = null;
    ac.a(aW);
    aW = null;
    ac.a(aX);
    aX = null;
    ac.a(ai);
    ai = null;
    ac.a(aj);
    aj = null;
    ac.a(ak);
    ak = null;
    ac.a(al);
    al = null;
    ac.a(am);
    am = null;
    ac.a(an);
    an = null;
    ScrollLabel.d();
    g.c();
    l.d();
    com.nianticproject.ingress.common.scanner.visuals.b.w.c();
    z.c();
    ba.e();
  }

  public static void a(boolean paramBoolean)
  {
    try
    {
      com.nianticproject.ingress.shared.aj.a("ScannerAssets.createResources");
      boolean bool = ba.a(paramBoolean);
      if (!bool)
        return;
      VertexAttribute[] arrayOfVertexAttribute = new VertexAttribute[1];
      arrayOfVertexAttribute[0] = new VertexAttribute(0, 3, "a_position");
      c.a("CreatePlayerMesh", c.e("scanner/playerMesh.obj"), new ah());
      c.a("CreateBreadCrumbMesh", c.e("scanner/playerBreadcrumbMesh.obj"), new as());
      c.a("CreatePlayerTexture", c.b("scanner/playerTexture.png", true), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new bd());
      c.a("CreatePortalKeyResourceUnit", c.e("scanner/portalKeyResourceUnit.obj"), new bo());
      c.a("CreatePortalKeyResourceUnitTexture", c.b("scanner/portalKeyResourceUnitTexture.png", false), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new bz());
      c.a("CreateXmpMesh", c.e("scanner/xmp.obj"), new ck());
      c.a("CreateXmpXMMesh", c.e("scanner/xmpXM.obj"), new cv());
      c.a("CreateXmpResourceUnitMesh", c.e("scanner/xmpResourceUnit.obj"), new dg());
      c.a("CreateXmpTexture", c.b("scanner/xmpTexture.png", false), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new dr());
      c.a("CreateUltrastrikeMesh", c.e("scanner/ultrastrike.obj"), new ai());
      c.a("CreateUltrastrikeXMMesh", c.e("scanner/ultrastrikeXM.obj"), new aj());
      c.a("CreateUltrastrikeResourceUnitMesh", c.e("scanner/ultrastrikeResourceUnit.obj"), new ak());
      c.a("CreateRingMesh", c.a(bd, be, arrayOfVertexAttribute), new al());
      c.a("CreateBoxMesh", c.a(bb, bc, arrayOfVertexAttribute), new am());
      c.a("CreatePortalShieldMesh", c.e("scanner/shield.obj"), new an());
      c.a("CreateResShieldMesh", c.e("scanner/shieldResource.obj"), new ao());
      c.a("CreateResShieldXMMesh", c.e("scanner/shieldResourceXM.obj"), new ap());
      c.a("CreatePortalShieldResourceUnitMesh", c.e("scanner/shieldResourceUnit.obj"), new aq());
      c.a("CreateShieldTexture", c.b("scanner/shieldTexture.png", false), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new ar());
      c.a("CreateMediaPlaneMesh", c.e("scanner/media_plane.obj"), new at());
      c.a("CreateMediaCubeMesh", c.e("scanner/mediaCubeResourceUnit.obj"), new au());
      c.a("CreateMediaCubeTexture", c.b("scanner/mediaCubeTexture.png", false), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new av());
      c.a("CreatePowerCubeMesh", c.e("scanner/powerCubeResource.obj"), new aw());
      c.a("CreatePowerCubeXmMesh", c.e("scanner/powerCubeResourceXM.obj"), new ax());
      c.a("CreatePowerCubeResourceUnitMesh", c.e("scanner/powerCubeResourceUnit.obj"), new ay());
      c.a("CreatePowerCubeTexture", c.b("scanner/powerCubeTexture.png", false), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new az());
      c.a("CreateLinkAmpMesh", c.e("scanner/linkAmpResource.obj"), new ba());
      c.a("CreateLinkAmpXmMesh", c.e("scanner/linkAmpResourceXM.obj"), new bb());
      c.a("CreateLinkAmpResourceUnitMesh", c.e("scanner/linkAmpResourceUnit.obj"), new bc());
      c.a("CreateHeatSinkMesh", c.e("scanner/heatSinkResource.obj"), new be());
      c.a("CreateHeatSinkXmMesh", c.e("scanner/heatSinkResourceXM.obj"), new bf());
      c.a("CreateHeatSinkResourceUnitMesh", c.e("scanner/heatSinkResourceUnit.obj"), new bg());
      c.a("CreateMultiHackMesh", c.e("scanner/multiHackResource.obj"), new bh());
      c.a("CreateMultiHackXmMesh", c.e("scanner/multiHackResourceXM.obj"), new bi());
      c.a("CreateMultiHackResourceUnitMesh", c.e("scanner/multiHackResourceUnit.obj"), new bj());
      c.a("CreateForceAmpMesh", c.e("scanner/forceAmpResource.obj"), new bk());
      c.a("CreateForceAmpXmMesh", c.e("scanner/forceAmpResourceXM.obj"), new bl());
      c.a("CreateForceAmpResourceUnitMesh", c.e("scanner/forceAmpResourceUnit.obj"), new bm());
      c.a("CreateTurretMesh", c.e("scanner/turretResource.obj"), new bn());
      c.a("CreateTurretXmMesh", c.e("scanner/turretResourceXM.obj"), new bp());
      c.a("CreateTurretResourceUnitMesh", c.e("scanner/turretResourceUnit.obj"), new bq());
      c.a("CreateFlipCardMeshAda", c.e("scanner/flipCardResourceAda.obj"), new br());
      c.a("CreateFlipCardResourceUnitMeshAda", c.e("scanner/flipCardResourceUnitAda.obj"), new bs());
      c.a("CreateFlipCardMeshJarvis", c.e("scanner/flipCardResourceJarvis.obj"), new bt());
      c.a("CreateFlipCardXmMesh", c.e("scanner/flipCardResourceXM.obj"), new bu());
      c.a("CreateFlipCardResourceUnitMeshJarvis", c.e("scanner/flipCardResourceUnitJarvis.obj"), new bv());
      c.a("CreateFlipCardTexture", c.b("scanner/genericModTexture.png", false), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new bw());
      c.a("CreateResonatorMesh", c.e("scanner/texturedResonatorRing.obj"), new bx());
      c.a("CreateResonatorXMMesh", c.e("scanner/texturedResonatorXM.obj"), new by());
      c.a("CreateResonatorRingLowResMesh", c.e("scanner/resonatorResourceRing-LRes.obj"), new ca());
      c.a("CreateResonatorXMLowResMesh", c.e("scanner/resonatorResourceXM-LRes.obj"), new cb());
      c.a("CreateResonatorResourceUnitMesh", c.e("scanner/resonatorResourceUnit.obj"), new cc());
      c.a("CreateResonatorTexture", c.b("scanner/resonatorTexture.png", true), Texture.TextureFilter.MipMapLinearLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new cd());
      c.a("CreateObjectXMTexture", c.b("scanner/objectXMTexture.tga", false), Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new ce());
      com.google.a.c.dh.j().a("pCone1", Float.valueOf(1.0F)).a("pCone2", Float.valueOf(-2.0F)).a("pCone3", Float.valueOf(-1.0F)).a();
      c.a("CreateTexturedPortalMesh", a.a("scanner/texturedPortal.obj"), new cf());
      c.a("CreateGlowrampTexture", c.b("scanner/portalTexture.png", true), Texture.TextureFilter.MipMapLinearNearest, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new cg());
      ad.a("CreateSolidShader", "uniform mat4 u_modelViewProject;\nattribute vec3 a_position;\nvoid main() { \n  gl_Position = u_modelViewProject * vec4(a_position, 1.0);\n}", "#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec4 u_color;\nvoid main() {\n  gl_FragColor = u_color;\n}", new ch());
      ad.a("shaders/textured.glsl.vert", "shaders/textured.glsl.frag", new ci());
      ad.a("shaders/color_textured.glsl.vert", "shaders/color_textured.glsl.frag", new cj());
      ad.a("shaders/alpha_tinted_textured.glsl.vert", "shaders/alpha_tinted_textured.glsl.frag", new cl());
      ad.a("shaders/tinted_textured.glsl.vert", "shaders/tinted_textured.glsl.frag", new cm());
      ad.a("shaders/region_textured.glsl.vert", "shaders/region_textured.glsl.frag", new cn());
      ad.a("CreatePlayerShader", "uniform mat4 u_modelViewProject;\nattribute vec3 a_position;\nattribute vec2 a_texCoord0;\nvarying vec2 v_texCoord0;\nvoid main() { \n  v_texCoord0 = a_texCoord0;\n  gl_Position = u_modelViewProject * vec4(a_position, 1.0);\n}", "#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform float u_flicker;\nuniform vec4 u_color;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord0;\nvoid main() {\n  vec4 texture = texture2D(u_texture, v_texCoord0);  float flicker = (texture.a < 1.0) ? u_flicker : 0.0;  vec4 u_blendedColor = (u_color + flicker) * texture;\n  gl_FragColor = vec4(u_blendedColor.rgb, texture.a);\n}", new co());
      ad.a("shaders/ap_meter.glsl.vert", "shaders/ap_meter.glsl.frag", new cp());
      ad.a("CreateLinkShader", "uniform mat4 u_modelViewProject;\nuniform vec3 u_cameraFwd;\nuniform float u_elapsedTime;\nattribute vec4 a_position;\nattribute vec4 a_texCoord0;\nattribute vec4 a_color;\nvarying vec4 v_texCoord0And1;\nvarying vec4 v_color;\nvoid main() { \n  vec3 normal = normalize(vec3(a_texCoord0.z, .001, a_texCoord0.w));\n  v_texCoord0And1.xy = (a_texCoord0.xy + vec2(0, u_elapsedTime * a_position.w * 0.6));\n  v_texCoord0And1.zw = a_texCoord0.xy + vec2(0, u_elapsedTime * a_position.w);\n  v_color = a_color;\n float alpha = abs(dot(normal, u_cameraFwd));\n  v_color.a *= (3.0 * alpha * alpha) - (2.0 * alpha * alpha * alpha);\n  gl_Position = u_modelViewProject * vec4(a_position.xyz, 1.0);\n}", "#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform sampler2D u_texture;\nvarying vec4 v_color;\nvarying vec4 v_texCoord0And1;\nvoid main() {\n  vec4 base = texture2D(u_texture, v_texCoord0And1.xy);\n  vec4 scrolled = texture2D(u_texture, v_texCoord0And1.zw);\n  float dots = scrolled.g;\n  float brighten = mix(1.0, 2.0, base.b + (dots / 4.0));\n  gl_FragColor.rgb = v_color.rgb * mix(0.35, brighten, dots);\n  gl_FragColor.a = v_color.a * base.r;\n}", new cq());
      ad.a("CreateWavyWooshShader", "uniform mat4 u_modelViewProject;\nuniform vec3 u_cameraFwd;\nuniform float u_elapsedTime;\nuniform float u_alpha;\nuniform vec4 u_color;\nattribute vec4 a_position;\nattribute vec4 a_texCoord0;\nvarying vec3 v_texCoord0;\nvarying vec4 v_color;\nvoid main() { \n  vec3 normal = normalize(vec3(a_texCoord0.z, .001, a_texCoord0.w));\n  v_texCoord0.xy = a_texCoord0.xy;\n  v_color = u_color;\n float alpha = clamp(abs(dot(normal, u_cameraFwd)), 0.5, 1.0);\n v_color.a *= (3.0 * alpha * alpha) - (2.0 * alpha * alpha * alpha);\n v_color.a *= u_alpha;\n v_texCoord0.z = 5.0 * v_texCoord0.x + 25.0 * u_elapsedTime;\n  gl_Position = u_modelViewProject * vec4(a_position.x,\n      u_elapsedTime * a_position.y + (1.0 - u_elapsedTime) * a_position.w,\n      a_position.z, 1.0);\n}", "#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_color;\nvarying vec3 v_texCoord0;\nvoid main() {\n  float v = v_texCoord0.y;\n  gl_FragColor.rgb = v_color.rgb +       vec3(1.0) * (5. * (v - 0.6) * step(0.6, v) + 10. *(0.8 - v) * step(0.8, v));\n  gl_FragColor.a = v_color.a * (0.66 + 0.33*sin(v_texCoord0.z)) * \n      (v + step(0.8, v) * 6.0*(1.0 - v));\n}", new cr());
      ad.a("shaders/portal_scanner.glsl.vert", "shaders/portal_scanner.glsl.frag", new cs());
      ad.a("shaders/portal_flipfight.glsl.vert", "shaders/portal_flipfight.glsl.frag", new ct());
      ad.a("shaders/shield.glsl.vert", "shaders/shield.glsl.frag", new cu());
      ad.a("shaders/shield_wave.glsl.vert", "shaders/shield_wave.glsl.frag", new cw());
      ad.a("shaders/shield_die.glsl.vert", "shaders/shield_die.glsl.frag", new cx());
      c.a("CreatePortalShieldTexture", c.b("scanner/portalShieldMod.png", true), Texture.TextureFilter.MipMapLinearLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new cy());
      c.a("CreateShieldHoleNoiseTexture", c.b("scanner/portalShieldHoleNoise.png", true), Texture.TextureFilter.MipMapLinearLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new cz());
      c.a("CreatePlayerActionGlowTexture", c.b("scanner/playerActionGlow.png", true), Texture.TextureFilter.MipMapLinearLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new da());
      ad.a("shaders/particle_portals.glsl.vert", "shaders/particle_portals.glsl.frag", new db());
      ad.a("shaders/particle_power_cube.glsl.vert", "shaders/particle_power_cube.glsl.frag", new dc());
      ad.a("shaders/particle_hack.glsl.vert", "shaders/particle_hack.glsl.frag", new dd());
      ad.a("shaders/particle_flip_card.glsl.vert", "shaders/particle_flip_card.glsl.frag", new de());
      ad.a("shaders/particle_xm.glsl.vert", "shaders/particle_xm.glsl.frag", new df());
      ad.a("shaders/particle_location.glsl.vert", "shaders/particle_location.glsl.frag", new dh());
      ad.a("shaders/action_glow.glsl.vert", "shaders/action_glow.glsl.frag", new di());
      ad.a("shaders/billboard_glow.glsl.vert", "shaders/billboard_glow.glsl.frag", new dj());
      ad.a("shaders/sprite_channel_replacer.glsl.vert", "shaders/sprite_channel_replacer.glsl.frag", new dk());
      c.a("CreateParticleTexture", c.b("scanner/particle.png", true), Texture.TextureFilter.MipMapLinearNearest, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.ClampToEdge, new dl());
      c.a("CreateCompassMesh", c.e("scanner/compass.obj"), new dm());
      c.a("CreateCompassOnTexture", c.b("scanner/compassTextureOn.png", true), Texture.TextureFilter.MipMapLinearLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new dn());
      c.a("CreateCompassOffTexture", c.b("scanner/compassTextureOff.png", true), Texture.TextureFilter.MipMapLinearLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new do());
      c.a("CreateSingleResonatorMesh", c.e("scanner/singleResonator.obj"), new dp());
      c.a("CreateXmpRingMesh", c.e("scanner/emp_ring.obj"), new dq());
      c.a("CreateXmpRingTexture", c.b("scanner/emp_ring.png", true), Texture.TextureFilter.MipMapNearestLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new ds());
      c.a("CreateUltraStrikeRingMesh", c.e("scanner/ultrastrike_ring.obj"), new dt());
      c.a("CreateUltraStrikeColumnMesh", c.e("scanner/ultrastrike_cylinder.obj"), new du());
      c.a("CreateUltraStrikeRingTexture", c.b("scanner/ultrastrike_ring.png", true), Texture.TextureFilter.MipMapNearestLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new dv());
      c.a("CreateUltraStrikeColumnTexture", c.b("scanner/vertical_gradient.png", true), Texture.TextureFilter.MipMapNearestLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat, new dw());
      c.a("CreateResonatorLinkTexture", c.b("scanner/resonatorLinkTexture.png", true), Texture.TextureFilter.MipMapNearestLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.Repeat, new dx());
      c.a("CreatePortalLinkTexture", c.b("scanner/portalLinkTexture.png", true), Texture.TextureFilter.MipMapNearestLinear, Texture.TextureFilter.Linear, Texture.TextureWrap.ClampToEdge, Texture.TextureWrap.Repeat, new dy());
      i.a().a(new dz());
      ab.b();
      ScrollLabel.c();
      com.nianticproject.ingress.common.scanner.visuals.ck.b();
      g.a();
      l.c();
      com.nianticproject.ingress.common.scanner.visuals.b.w.a();
      z.a();
      ba.c();
      return;
    }
    finally
    {
      com.nianticproject.ingress.shared.aj.b();
    }
  }
}

/* Location:           classes_dex2jar.jar
 * Qualified Name:     com.nianticproject.ingress.common.scanner.ag
 * JD-Core Version:    0.6.2
 */